// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package otsimopb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x18, 0x74, 0x40, 0xac, 0xca, 0xd7, 0x65, 0x0b, 0x06, 0xf1, 0x13, 0xa4, 0x1c, 0x0a, 0x9c, 0x90,
	0xb2, 0x52, 0xb9, 0xc0, 0x01, 0x50, 0x58, 0x96, 0xb0, 0x27, 0x56, 0x5b, 0x90, 0x10, 0xe2, 0xe2,
	0xc4, 0x1f, 0x59, 0x4b, 0x89, 0x6d, 0x6c, 0xef, 0x4a, 0x5c, 0x79, 0x02, 0x8e, 0x9c, 0x79, 0x9a,
	0x3d, 0xf6, 0x11, 0x68, 0xfb, 0x22, 0xa8, 0x89, 0xd3, 0x40, 0xd5, 0x0a, 0x38, 0xec, 0x2d, 0xf3,
	0xcd, 0x7c, 0x33, 0x63, 0x47, 0x86, 0xcb, 0x4c, 0x8b, 0x58, 0x1b, 0xe5, 0x14, 0xbd, 0xc4, 0xb4,
	0xd0, 0x59, 0x78, 0xa3, 0x50, 0x85, 0xaa, 0x27, 0xbb, 0x8b, 0xaf, 0x86, 0x0c, 0x77, 0x2a, 0xb4,
	0x96, 0x15, 0x68, 0x3d, 0xde, 0xae, 0x14, 0xc7, 0xd2, 0xa3, 0xd1, 0xd7, 0x2d, 0x80, 0x44, 0x8b,
	0x31, 0x9a, 0x53, 0x91, 0x23, 0xdd, 0x05, 0x48, 0x38, 0x3f, 0x34, 0xea, 0x93, 0x28, 0x91, 0xee,
	0xc4, 0xb5, 0x71, 0xec, 0x71, 0x38, 0xf0, 0xf8, 0x08, 0xad, 0x56, 0xd2, 0xe2, 0x90, 0xd0, 0xc7,
	0x00, 0x29, 0xba, 0x76, 0xe1, 0xb6, 0x17, 0x74, 0xa3, 0x23, 0xfc, 0x7c, 0x82, 0xd6, 0x85, 0x2b,
	0x56, 0x43, 0x42, 0x47, 0x70, 0xe5, 0x9d, 0xe6, 0xcc, 0xe1, 0x7f, 0xa4, 0x3d, 0x84, 0x5e, 0xc2,
	0xf9, 0xde, 0xb1, 0x28, 0x39, 0xdd, 0xf6, 0x74, 0x8d, 0xd6, 0x89, 0x47, 0xd0, 0x4b, 0xd1, 0x35,
	0xe2, 0x9b, 0x5d, 0xb1, 0x7a, 0xd0, 0xd6, 0xfa, 0xc3, 0x64, 0x48, 0x68, 0x0c, 0xfd, 0xa6, 0xd4,
	0x3f, 0x66, 0x7c, 0x84, 0x7e, 0x6b, 0x69, 0x50, 0xd2, 0xfb, 0x2b, 0x31, 0x06, 0xe5, 0x2b, 0xa3,
	0xaa, 0x95, 0xbb, 0x78, 0xf0, 0x17, 0xd5, 0xd2, 0xfd, 0x29, 0x0c, 0x9a, 0x36, 0x29, 0xab, 0x70,
	0x5f, 0x3a, 0xf3, 0x85, 0xde, 0x6a, 0x77, 0xdb, 0x49, 0x6b, 0xba, 0xa6, 0xdc, 0x6b, 0xb8, 0xba,
	0x77, 0xcc, 0x64, 0x81, 0x49, 0xee, 0xc4, 0x29, 0x73, 0x42, 0x49, 0x7a, 0x6f, 0x79, 0xa2, 0x05,
	0x51, 0xc7, 0x77, 0xec, 0x26, 0x2f, 0x9a, 0xc1, 0xf5, 0x14, 0xdd, 0x4b, 0x61, 0x59, 0x56, 0x22,
	0x3f, 0x97, 0xe3, 0xd2, 0x27, 0xd0, 0x1f, 0xab, 0x13, 0xc9, 0xf7, 0xe5, 0x22, 0x84, 0xde, 0xf1,
	0x5b, 0xbf, 0xcd, 0x36, 0xd6, 0x7b, 0x06, 0xd7, 0xba, 0x7b, 0x3a, 0x90, 0x5c, 0xe4, 0x68, 0xe9,
	0x5d, 0xaf, 0x6a, 0x98, 0x03, 0xc9, 0x31, 0x47, 0xbb, 0xf6, 0xbf, 0xbf, 0x78, 0x7e, 0x36, 0x8d,
	0xc8, 0x64, 0x1a, 0x91, 0xb3, 0x59, 0x14, 0x4c, 0x66, 0x51, 0xf0, 0x73, 0x16, 0x05, 0xdf, 0xe6,
	0x11, 0xf9, 0x3e, 0x8f, 0x08, 0x0c, 0x72, 0x55, 0xc5, 0xca, 0x59, 0x51, 0xa9, 0xb8, 0x30, 0x3a,
	0x3f, 0x0c, 0x3e, 0xf4, 0x1a, 0xa8, 0xb3, 0x1f, 0x17, 0x2e, 0xbe, 0x79, 0x3b, 0x7e, 0x4f, 0xb2,
	0xad, 0xfa, 0x39, 0x3d, 0xfa, 0x15, 0x00, 0x00, 0xff, 0xff, 0xea, 0xde, 0xf7, 0xf2, 0x96, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	// Profile
	AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error)
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error)
	// Child
	AddChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error)
	GetChild(ctx context.Context, in *GetChildRequest, opts ...grpc.CallOption) (*Child, error)
	UpdateChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error)
	GetChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error)
	UpdateGameEntry(ctx context.Context, in *GameEntryRequest, opts ...grpc.CallOption) (*Response, error)
	ChangeActivation(ctx context.Context, in *ChangeChildActivationRequest, opts ...grpc.CallOption) (*Response, error)
	GetDisabledChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error)
	SoundEnable(ctx context.Context, in *SoundEnableRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateGameIndices(ctx context.Context, in *UpdateIndecesRequest, opts ...grpc.CallOption) (*Child, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/AddProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/UpdateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) AddChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/AddChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChild(ctx context.Context, in *GetChildRequest, opts ...grpc.CallOption) (*Child, error) {
	out := new(Child)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/GetChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/UpdateChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error) {
	out := new(GetChildrenFromProfileResponse)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/GetChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateGameEntry(ctx context.Context, in *GameEntryRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/UpdateGameEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ChangeActivation(ctx context.Context, in *ChangeChildActivationRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/ChangeActivation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetDisabledChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error) {
	out := new(GetChildrenFromProfileResponse)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/GetDisabledChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SoundEnable(ctx context.Context, in *SoundEnableRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/SoundEnable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateGameIndices(ctx context.Context, in *UpdateIndecesRequest, opts ...grpc.CallOption) (*Child, error) {
	out := new(Child)
	err := c.cc.Invoke(ctx, "/apipb.ApiService/UpdateGameIndices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	// Profile
	AddProfile(context.Context, *Profile) (*Response, error)
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
	UpdateProfile(context.Context, *Profile) (*Response, error)
	// Child
	AddChild(context.Context, *Child) (*Response, error)
	GetChild(context.Context, *GetChildRequest) (*Child, error)
	UpdateChild(context.Context, *Child) (*Response, error)
	GetChildren(context.Context, *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error)
	UpdateGameEntry(context.Context, *GameEntryRequest) (*Response, error)
	ChangeActivation(context.Context, *ChangeChildActivationRequest) (*Response, error)
	GetDisabledChildren(context.Context, *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error)
	SoundEnable(context.Context, *SoundEnableRequest) (*Response, error)
	UpdateGameIndices(context.Context, *UpdateIndecesRequest) (*Child, error)
}

// UnimplementedApiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (*UnimplementedApiServiceServer) AddProfile(ctx context.Context, req *Profile) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProfile not implemented")
}
func (*UnimplementedApiServiceServer) GetProfile(ctx context.Context, req *GetProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedApiServiceServer) UpdateProfile(ctx context.Context, req *Profile) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfile not implemented")
}
func (*UnimplementedApiServiceServer) AddChild(ctx context.Context, req *Child) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddChild not implemented")
}
func (*UnimplementedApiServiceServer) GetChild(ctx context.Context, req *GetChildRequest) (*Child, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChild not implemented")
}
func (*UnimplementedApiServiceServer) UpdateChild(ctx context.Context, req *Child) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChild not implemented")
}
func (*UnimplementedApiServiceServer) GetChildren(ctx context.Context, req *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChildren not implemented")
}
func (*UnimplementedApiServiceServer) UpdateGameEntry(ctx context.Context, req *GameEntryRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGameEntry not implemented")
}
func (*UnimplementedApiServiceServer) ChangeActivation(ctx context.Context, req *ChangeChildActivationRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeActivation not implemented")
}
func (*UnimplementedApiServiceServer) GetDisabledChildren(ctx context.Context, req *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDisabledChildren not implemented")
}
func (*UnimplementedApiServiceServer) SoundEnable(ctx context.Context, req *SoundEnableRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SoundEnable not implemented")
}
func (*UnimplementedApiServiceServer) UpdateGameIndices(ctx context.Context, req *UpdateIndecesRequest) (*Child, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGameIndices not implemented")
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_AddProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).AddProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/AddProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).AddProfile(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).UpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/UpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).UpdateProfile(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_AddChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Child)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).AddChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/AddChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).AddChild(ctx, req.(*Child))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/GetChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetChild(ctx, req.(*GetChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_UpdateChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Child)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).UpdateChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/UpdateChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).UpdateChild(ctx, req.(*Child))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChildrenFromProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetChildren(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/GetChildren",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetChildren(ctx, req.(*GetChildrenFromProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_UpdateGameEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).UpdateGameEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/UpdateGameEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).UpdateGameEntry(ctx, req.(*GameEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ChangeActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeChildActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ChangeActivation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/ChangeActivation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ChangeActivation(ctx, req.(*ChangeChildActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetDisabledChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChildrenFromProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetDisabledChildren(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/GetDisabledChildren",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetDisabledChildren(ctx, req.(*GetChildrenFromProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SoundEnable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SoundEnableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SoundEnable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/SoundEnable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SoundEnable(ctx, req.(*SoundEnableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_UpdateGameIndices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIndecesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).UpdateGameIndices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apipb.ApiService/UpdateGameIndices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).UpdateGameIndices(ctx, req.(*UpdateIndecesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apipb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddProfile",
			Handler:    _ApiService_AddProfile_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _ApiService_GetProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _ApiService_UpdateProfile_Handler,
		},
		{
			MethodName: "AddChild",
			Handler:    _ApiService_AddChild_Handler,
		},
		{
			MethodName: "GetChild",
			Handler:    _ApiService_GetChild_Handler,
		},
		{
			MethodName: "UpdateChild",
			Handler:    _ApiService_UpdateChild_Handler,
		},
		{
			MethodName: "GetChildren",
			Handler:    _ApiService_GetChildren_Handler,
		},
		{
			MethodName: "UpdateGameEntry",
			Handler:    _ApiService_UpdateGameEntry_Handler,
		},
		{
			MethodName: "ChangeActivation",
			Handler:    _ApiService_ChangeActivation_Handler,
		},
		{
			MethodName: "GetDisabledChildren",
			Handler:    _ApiService_GetDisabledChildren_Handler,
		},
		{
			MethodName: "SoundEnable",
			Handler:    _ApiService_SoundEnable_Handler,
		},
		{
			MethodName: "UpdateGameIndices",
			Handler:    _ApiService_UpdateGameIndices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
